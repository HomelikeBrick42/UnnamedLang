proc factorial(n: u64) => u64 {
    if n <= 1 {
        return 1
    } else {
        return n * factorial(n - 1)
    }
}

do_whatever(print_u64, 42)

proc loop() => void {
    print_char(65)
    print_char(10)
    loop()
}

// loop()

proc print_n(n: u64) => void {
    var i: u64 <- 1
    while i <= n {
        print_u64(i)
        i <- i + 1
    }
}

print_n(10)

// while 0 == 0 {
//     print_char(input_char())
// }

proc print_s64(value: s64) => void #extern "print_s64"
proc print_u64(value: u64) => void #extern "print_u64"

proc do_whatever(print_proc: proc(u64) => void, value: s64) => void {
    print_proc(factorial(6))
    print_proc(cast(u64) value)
    print_char(69)
    print_char(10)
}

proc print_char(value: s32) => s32 #extern "putchar"
proc input_char() => s32 #extern "getchar"
